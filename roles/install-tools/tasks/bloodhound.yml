- name: Install required packages for BloodHound
  apt:
    name:
      - bloodhound
      - neo4j
      - npm
    state: present
    update_cache: yes
  become: true

- name: Ensure BloodHound directory exists
  file:
    path: /opt/tools/ad/bloodhound
    state: directory
    owner: kali
    group: kali
    mode: '0755'
  become: true

- name: Stop Neo4j (if running)
  shell: "sudo neo4j stop || true"
  become: true
  changed_when: false

- name: Start Neo4j using sudo neo4j console
  shell: "sudo neo4j start > /tmp/neo4j.log 2>&1"
  become: true

- name: Wait for Neo4j to fully start
  wait_for:
    port: 7687
    delay: 5
    timeout: 30

- name: Verify Neo4j is running before proceeding
  shell: "pgrep -f 'neo4j' || true"
  register: neo4j_final_check
  changed_when: false

- name: Fail if Neo4j is not running
  fail:
    msg: "Neo4j did not start properly. Check logs in /tmp/neo4j.log"
  when: neo4j_final_check.stdout == ""

- name: Show last 20 lines of Neo4j log if startup failed
  shell: "tail -n 20 /tmp/neo4j.log"
  register: neo4j_logs
  when: neo4j_final_check.stdout == ""

# --- Step 1: Generate Secure Password ---
- name: Generate a simple 12-character password (lowercase + numbers)
  shell: tr -dc 'a-z0-9' </dev/urandom | head -c 12
  register: generated_password
  changed_when: false

- name: Store new password as a fact
  set_fact:
    neo4j_password: "{{ generated_password.stdout }}"

# --- Step 2: Attempt to log in and check if password reset is required ---
- name: Attempt to log into Neo4j
  shell: "/usr/share/neo4j/bin/cypher-shell -u neo4j -p neo4j --database=system"
  register: neo4j_login
  failed_when: false
  changed_when: false

# --- Step 3: If password reset is required, handle it interactively ---
- name: Handle forced password change if required
  expect:
    command: /usr/share/neo4j/bin/cypher-shell -u neo4j -p neo4j
    responses:
      "Password change required\\s+new password:": "{{ neo4j_password }}"
      "confirm password:": "{{ neo4j_password }}"
  when: "'Password change required' in neo4j_login.stderr"
  become: true
  register: password_change_result
  ignore_errors: true

# --- Step 4: Change password to secure one after reset (only if not already correct) ---
- name: Set Neo4j password to stored one if required
  shell: |
    echo "ALTER CURRENT USER SET PASSWORD FROM 'neo4j' TO '{{ neo4j_password }}';" | /usr/share/neo4j/bin/cypher-shell -u neo4j -p neo4j --database=system
  when: "'Password change required' not in neo4j_login.stderr and 'authentication failure' not in neo4j_login.stderr"
  become: true
  register: final_password_change
  ignore_errors: true

# --- Step 5: Save password file ONLY if password was actually changed ---
- name: Save the password to a file (only if password was changed)
  copy:
    content: "{{ neo4j_password }}"
    dest: /opt/tools/ad/bloodhound/created-password.txt
    owner: kali
    group: kali
    mode: '0600'
  become: true
  when: final_password_change is succeeded or password_change_result is succeeded
