- name: Install dependencies
  become: yes
  apt:
    name:
      - build-essential
      - cmake
      - meson
      - ninja-build
      - pkg-config
      - python3
      - python3-pip
      - curl
      - wget
      - unzip
      - lxappearance
      - dconf-cli
    state: present
    update_cache: yes

- name: Install i3-gaps and dependencies
  become: yes
  apt:
    name: "{{ i3_packages }}"
    state: present
    update_cache: yes

- name: Install i3 and related packages
  become: yes
  apt:
    name: "{{ i3_packages }}"
    state: present
    update_cache: yes

- name: Ensure configuration directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop: "{{ config_dirs }}"

- name: Deploy i3 configuration file
  copy:
    src: "files/i3/config"
    dest: "{{ config_dirs[0] }}/config"
    mode: '0644'

- name: Deploy Alacritty configuration
  copy:
    src: "files/alacritty/alacritty.toml"
    dest: "{{ config_dirs[1] }}/alacritty.toml"
    mode: '0644'

- name: Deploy Compton (Picom) configuration
  copy:
    src: "files/compton/compton.conf"
    dest: "{{ config_dirs[2] }}/compton.conf"
    mode: '0644'

- name: Deploy Rofi configuration
  copy:
    src: "files/rofi/config.rasi"
    dest: "{{ config_dirs[3] }}/config.rasi"
    mode: '0644'

- name: Ensure Nerd Fonts directory exists
  file:
    path: "{{ fonts_dir }}"
    state: directory
    mode: '0755'

- name: Download and install Nerd Fonts
  get_url:
    url: "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/{{ item }}.zip"
    dest: "/tmp/{{ item }}.zip"
  loop: "{{ nerd_fonts }}"

- name: Extract Nerd Fonts
  unarchive:
    src: "/tmp/{{ item }}.zip"
    dest: "{{ fonts_dir }}"
    remote_src: yes
  loop: "{{ nerd_fonts }}"

- name: Refresh font cache
  command: fc-cache -fv

- name: Set desktop background using feh
  command: "feh --bg-scale {{ background_image }}"

- name: Ensure feh sets background on startup
  lineinfile:
    path: "~/.config/i3/config"
    line: "exec --no-startup-id feh --bg-scale {{ background_image }}"
    create: yes

- name: Install Zsh
  become: yes
  apt:
    name: "zsh"
    state: present
    update_cache: yes

- name: Install Oh-My-Zsh
  shell: |
    RUNZSH=no sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  args:
    creates: "~/.oh-my-zsh"

- name: Set Zsh as default shell
  user:
    name: "{{ ansible_user_id }}"
    shell: "/usr/bin/zsh"

- name: Install Zsh plugins
  git:
    repo: "https://github.com/zsh-users/{{ item }}.git"
    dest: "~/.oh-my-zsh/custom/plugins/{{ item }}"
  loop: "{{ zsh_plugins }}"

- name: Apply Arc-Theme for GTK
  command: "gsettings set org.gnome.desktop.interface gtk-theme 'Arc-Dark'"

- name: Apply Papirus Icons
  command: "gsettings set org.gnome.desktop.interface icon-theme 'Papirus-Dark'"

- name: Ensure Arc-Theme is persistently set
  lineinfile:
    path: "~/.profile"
    line: "export GTK_THEME=Arc-Dark"

- name: Ensure Papirus Icons are persistently set
  lineinfile:
    path: "~/.profile"
    line: "export ICON_THEME=Papirus-Dark"
